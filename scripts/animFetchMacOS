#!/bin/bash
#courtesy of https://boreddev.nl/

# Base directory containing all logo variations
BASE_DIR="$HOME/logoVariations"

# Function to list available folders
list_available() {
  echo "Available frame folders in '$BASE_DIR':"
  for dir in "$BASE_DIR"/*/; do
    [ -d "$dir" ] && echo "  - $(basename "$dir")"
  done
}

# Check if an argument is passed
if [ $# -ne 1 ]; then
  echo "Usage: $0 -folderName (e.g., -archGreen)"
  list_available
  exit 1
fi

# Remove leading dash from argument
FOLDER_NAME="${1#-}"
FRAMES_DIR="$BASE_DIR/$FOLDER_NAME"

# Check if the directory exists
if [ ! -d "$FRAMES_DIR" ]; then
  echo "Error: Directory '$FRAMES_DIR' does not exist."
  list_available
  exit 1
fi

# Load frames from selected directory (null-safe)
frames=()
while IFS= read -r -d '' file; do
  frames+=("$file")
done < <(find "$FRAMES_DIR" -type f -print0 | sort -z)

total=${#frames[@]}
if [ "$total" -eq 0 ]; then
  echo "Error: No frames found in '$FRAMES_DIR'."
  exit 1
fi

# Cache fastfetch or fallback to neofetch
cached_info=$(fastfetch -l none --pipe false 2>/dev/null | sed 's/\x1b\[[0-9;]*[GKHF]//g')
if [ -z "$cached_info" ]; then
  cached_info=$(neofetch --stdout 2>/dev/null | sed 's/\x1b\[[0-9;]*[GKHF]//g')
fi

# Determine frame height
ascii_height=$(wc -l < "${frames[0]}" | tr -d ' ')
current=0

# Cleanup trap
trap "tput cnorm; tput sgr0; clear; exit" SIGINT SIGTERM

# Hide cursor before starting animation
tput civis

# Main animation loop
while true; do
  echo
  paste -d ' ' <(cat "${frames[current]}") <(echo "$cached_info") | head -n "$ascii_height"
  tput cup 0 0  # Move cursor to top-left
  current=$(( (current + 1) % total ))
  sleep 0.1
done
