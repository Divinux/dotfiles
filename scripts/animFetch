#!/bin/bash
# Script used to animate the ASCII art in neo-/fastfetch outputs
# Convert gif with
# ascii-image-converter /path/source.gif -W 60 >> animation.txt
# Split into separate files by frame and save in a separate folder
# Call this script to display

# Base directory containing all logo variations
BASE_DIR="$HOME/logoVariations"

# Function to list available folders
list_available() {
  echo "Available frame folders in '$BASE_DIR':"
  find "$BASE_DIR" -mindepth 1 -maxdepth 1 -type d -printf "%f\n" | sort | sed 's/^/  - /'
}

# Check if an argument is passed
if [ $# -ne 1 ]; then
  echo "Usage: $0 -folderName (e.g., -archGreen)"
  list_available
  exit 1
fi

# Remove leading dash from argument
FOLDER_NAME="${1#-}"

# Full path to selected frame directory
FRAMES_DIR="$BASE_DIR/$FOLDER_NAME"

# Check if the directory exists
if [ ! -d "$FRAMES_DIR" ]; then
  echo "Error: Directory '$FRAMES_DIR' does not exist."
  list_available
  exit 1
fi

# Load frames from selected directory
frames=("$FRAMES_DIR"/*)
total=${#frames[@]}
current=0

# Neofetch version
# cached_info=$(neofetch --ascii none --stdout | sed 's/\s*$//')
# Fastfetch version
cached_info=$(fastfetch -l none | sed 's/\s*$//')

# Determine frame height for display
ascii_height=$(wc -l < "${frames[0]}" | tr -d ' ')

# Animation loop
while true; do
  clear
  echo
  paste -d ' ' <(cat "${frames[current]}") <(echo "$cached_info") | head -n "$ascii_height"
  current=$(( (current + 1) % total ))
  sleep 0.1
done
